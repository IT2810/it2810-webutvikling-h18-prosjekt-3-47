// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Rendering renders correctly with ShallowRenderer 1`] = `
<Component
  style={
    Array [
      Object {
        "alignItems": "center",
      },
      Object {
        "flex": 0,
      },
    ]
  }
>
  <TouchableOpacity
    accessibilityLabel="Legg til en ny kalenderhendelse"
    activeOpacity={0.2}
    onPress={[Function]}
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Object {
          "fontSize": 20,
        }
      }
    >
      Legg til ny hendelse
    </Text>
  </TouchableOpacity>
  <ReactNativeModal
    animationIn="slideInUp"
    animationInTiming={300}
    animationOut="slideOutDown"
    animationOutTiming={300}
    avoidKeyboard={false}
    backdropColor="black"
    backdropOpacity={0.7}
    backdropTransitionInTiming={300}
    backdropTransitionOutTiming={300}
    hideModalContentWhileAnimating={false}
    isVisible={false}
    onBackButtonPress={[Function]}
    onBackdropPress={[Function]}
    onModalHide={[Function]}
    onModalShow={[Function]}
    onRequestClose={[Function]}
    onSwipe={[Function]}
    scrollOffset={0}
    scrollOffsetMax={0}
    scrollTo={null}
    style={
      Object {
        "alignItems": "center",
        "flex": 1,
      }
    }
    supportedOrientations={
      Array [
        "portrait",
        "landscape",
      ]
    }
    swipeDirection="down"
    swipeThreshold={100}
    useNativeDriver={false}
  >
    <ScrollViewMock
      style={
        Object {
          "backgroundColor": "#fff",
          "flex": 1,
          "padding": "2.5%",
          "width": "85%",
        }
      }
    >
      <TouchableOpacity
        accessibilityLabel="Skjul ny-kalenderhendelse-popupen"
        activeOpacity={0.2}
        onPress={[Function]}
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Object {
              "fontSize": 20,
            }
          }
        >
          Skjul popup
        </Text>
      </TouchableOpacity>
      <TextField
        accessibilityLabel="Skriv inn tekstbeskrivelse av ny kalenderhendelse"
        activeLineWidth={2}
        animationDuration={225}
        autoCapitalize="sentences"
        baseColor="rgba(0, 0, 0, .38)"
        disableFullscreenUI={true}
        disabled={false}
        disabledLineType="dotted"
        disabledLineWidth={1}
        editable={true}
        error={null}
        errorColor="rgb(213, 0, 0)"
        fontSize={18}
        inputContainerPadding={8}
        label="Hendelsesbeskrivelse"
        labelFontSize={16}
        labelHeight={32}
        labelPadding={4}
        lineWidth={0.5}
        multiline={true}
        onChangeText={[Function]}
        placeholder="Møte med Siv Jensen"
        textColor="rgba(0, 0, 0, .87)"
        tintColor="rgb(0, 145, 234)"
        titleFontSize={16}
        underlineColorAndroid="transparent"
        value=""
      />
      <Text
        accessibilityLabel="Valgt dato for den nye kalenderhendelsen er 2018-02-07"
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Object {
            "color": "#505050",
            "fontSize": 16,
            "marginBottom": 10,
            "marginLeft": 5,
          }
        }
      >
        Valgt dato: 
        2018-02-07
      </Text>
      <TouchableOpacity
        accessibilityLabel="Åpne datovelgeren for å velge dato for den nye kalenderhendelsen"
        activeOpacity={0.2}
        onPress={[Function]}
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Object {
              "fontSize": 20,
            }
          }
        >
           Åpne datovelgeren
        </Text>
      </TouchableOpacity>
      <TouchableOpacity
        accessibilityLabel="Lagre kalenderhendelsen"
        activeOpacity={0.2}
        onPress={[Function]}
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Object {
              "fontSize": 25,
              "marginBottom": 15,
              "marginTop": 10,
            }
          }
        >
           Lagre 
        </Text>
      </TouchableOpacity>
    </ScrollViewMock>
  </ReactNativeModal>
  <CustomDatePickerIOS
    cancelTextIOS="Avbryt"
    confirmTextIOS="Velg"
    isVisible={false}
    locale="nb"
    mode="date"
    neverDisableConfirmIOS={false}
    onCancel={[Function]}
    onConfirm={[Function]}
    onDateChange={[MockFunction]}
    onHideAfterConfirm={[Function]}
    reactNativeModalPropsIOS={Object {}}
    titleIOS="Velg en dato"
  />
</Component>
`;

exports[`Rendering renders correctly with renderer 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
      },
      Object {
        "flex": 0,
      },
    ]
  }
>
  <View
    accessibilityLabel="Legg til en ny kalenderhendelse"
    accessible={true}
    isTVSelectable={true}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "opacity": 1,
      }
    }
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Object {
          "fontSize": 20,
        }
      }
    >
      Legg til ny hendelse
    </Text>
  </View>
  <Modal
    animationType="none"
    hardwareAccelerated={false}
    hideModalContentWhileAnimating={false}
    onModalHide={[Function]}
    onRequestClose={[Function]}
    onSwipe={[Function]}
    scrollOffset={0}
    scrollOffsetMax={0}
    scrollTo={null}
    supportedOrientations={
      Array [
        "portrait",
        "landscape",
      ]
    }
    swipeDirection="down"
    swipeThreshold={100}
    transparent={true}
    visible={false}
  >
    <View
      accessible={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "black",
          "bottom": 0,
          "height": 1334,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
          "width": 750,
        }
      }
    />
    <View
      hideModalContentWhileAnimating={false}
      onModalHide={[Function]}
      onMoveShouldSetResponder={[Function]}
      onMoveShouldSetResponderCapture={[Function]}
      onRequestClose={[Function]}
      onResponderEnd={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderReject={[Function]}
      onResponderRelease={[Function]}
      onResponderStart={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      onStartShouldSetResponderCapture={[Function]}
      onSwipe={[Function]}
      pointerEvents="box-none"
      scrollOffset={0}
      scrollOffsetMax={0}
      scrollTo={null}
      style={
        Object {
          "alignItems": "center",
          "flex": 1,
          "justifyContent": "center",
          "left": 0,
          "margin": 37.5,
          "top": 0,
          "transform": Array [
            Object {
              "translateY": 0,
            },
          ],
        }
      }
      supportedOrientations={
        Array [
          "portrait",
          "landscape",
        ]
      }
      swipeDirection="down"
      swipeThreshold={100}
    />
  </Modal>
</View>
`;
